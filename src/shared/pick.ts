// pick.ts

// pick ржлрж╛ржВрж╢ржи: ржПржХржЯрж┐ ржЕржмржЬрзЗржХрзНржЯ ржерзЗржХрзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ key ржЧрзБрж▓рзЛ ржирж┐рзЯрзЗ ржирждрзБржи ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рзЗ

// <T extends Record<string, unknown>>:
// T рж╣рж▓ ржПржХржЯрж┐ ржЬрзЗржирзЗрж░рж┐ржХ ржЯрж╛ржЗржк, ржпрзЗржЯрж╛ ржПржоржи ржПржХржЯрж┐ ржЕржмржЬрзЗржХрзНржЯ ржпрж╛ string ржХрзА рж░рж╛ржЦрзЗ ржПржмржВ рждрж╛рж░ value
// ржпрзЗ ржХрзЛржирзЛ ржЯрж╛ржЗржк рж╣рждрзЗ ржкрж╛рж░рзЗ (unknown)ред ржЙржжрж╛рж╣рж░ржг: { name: "abc", age: 24 }

// <k extends keyof T>:
// k рж╣рж▓ T ржЯрж╛ржЗржк ржЕржмржЬрзЗржХрзНржЯрзЗрж░ key-ржЧрзБрж▓рзЛрж░ ржоржзрзНржпрзЗржХрж╛рж░ ржПржХржЯрж┐ рж╕рж╛ржм-ржЯрж╛ржЗржкред ржЕрж░рзНржерж╛рзО keys ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ ржпрж╛ ржкрж╛ржарж╛ржирзЛ рж╣ржЪрзНржЫрзЗ,
// рждрж╛ ржЕржмрж╢рзНржпржЗ obj-ржПрж░ ржоржзрзНржпрзЗ ржерж╛ржХрждрзЗ рж╣ржмрзЗред

const pick = <T extends Record<string, unknown>, k extends keyof T>(
  obj: T,
  keys: k[]
): Partial<T> => {
  console.log('ЁЯЪА ~ obj:', obj)
  const finalObj: Partial<T> = {} // ржирждрзБржи ржЕржмржЬрзЗржХрзНржЯ ржпрзЗржЦрж╛ржирзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ key ржЧрзБрж▓рзЛ ржерж╛ржХржмрзЗ

  for (const key of keys) {
    // ржЪрзЗржХ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ obj ржПрж░ ржоржзрзНржпрзЗ ржР key ржЯрж╛ ржЖрж╕рж▓рзЗржЗ ржЖржЫрзЗ ржХрж┐ржирж╛
    if (obj && Object.hasOwnProperty.call(obj, key)) {
      finalObj[key] = obj[key] // ржерж╛ржХрж▓рзЗ рж╕рзЗржЯрж╛ржХрзЗ finalObj рждрзЗ ржпрзЛржЧ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
    }
  }

  return finalObj // рж╢рзЗрж╖рзЗрж░ рж░рзЗржЬрж╛рж▓рзНржЯ рж░рж┐ржЯрж╛рж░рзНржи
}

export default pick
